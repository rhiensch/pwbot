[$.map(Visualizer.planets, function(x){return ['P',x.x,x.y,x.owner,x.numShips,x.growthRate].join(' ')}).join("\n"),$.map(Visualizer.moves[Math.floor(Visualizer.frame)].moving, function(x){return ['F',x.owner,x.numShips,Visualizer.planets.indexOf(x.source),Visualizer.planets.indexOf(x.destination),x.tripLength,x.tripLength-x.progress].join(' ')}).join("\n")
].join("\n")


[15:34] <Error323_>  * The heuristic score is defined as follows:
[15:34] <Error323_>  *         /                 f_e(p) + 1      \     /                 f_m(p) + 1      \
[15:34] <Error323_>  * h(n) = |Sum_{p in P_w(n)} ---------- * g(p)| - |Sum_{p in P_l(n)} ---------- * g(p)|,
[15:34] <Error323_>  *         \                 f_m(p) + 1      /     \                 f_e(p) + 1      /
[15:34] <Error323_>  *
[15:34] <Error323_>  * Where P_w(n) is the set of planets won at node n, P_l is the set of
[15:34] <Error323_>  * planets lost at node n, f_m(p) are the amount of fleets on my side send
[15:34] <Error323_>  * to this planet, f_e(p) are the amount of enemy fleets send to this
[15:34] <Error323_>  * planet and g(p) is the planet's growth rate.

Bot9
Bot: bot_exe\HazardBot_18.exe
3 - lose
4 - lose
5 - lose
6 - lose
9 - lose
15 - lose
22 - lose
24 - lose
29 - lose
30 - lose
31 - lose
34 - lose
35 - lose
36 - lose
38 - lose
39 - lose
40 - lose
43 - lose
45 - lose
49 - lose
    won  : 30/50
    lost : 20/50